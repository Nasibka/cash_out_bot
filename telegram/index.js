const { Telegraf } = require("telegraf");
const config = require("../config/default");
const BotUser = require("../models/botUser");

let token = config.dev.botToken;
let ExpensesBot = new Telegraf(token);

ExpensesBot.start(async (ctx) => {  
    console.log('bot start pressed by: '+ctx.from.username)
    let user = await BotUser.findOne({ chat_id: ctx.chat.id });
   
    if(!user){
        const newUser = {
            chat_id: ctx.chat.id,
            username: ctx.from.username
        };

        user = new BotUser(newUser);
        user.save((err, saved) => {
            if(err) console.log(err, ' ,error in telegram/index.js');
            if (saved) console.log('user saved');
        });

        ExpensesBot.telegram.sendMessage(ctx.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ :) (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: –í–∞–ª–∏–µ–≤–∞ –ù–∞—Å–∏–±–∞ )');
    }else if(user.step === 3){
        if(user.role ==='admin'){
            ExpensesBot.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            {"reply_markup": JSON.stringify({
                "keyboard": [
                    [{ text: "–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–º–º—É"}],
                    [{ text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é"}],
                    [{ text: "–í—Å–µ —Ä–∞—Å—Ö–æ–¥—ã"}]
                ],
                "one_time_keyboard" : true,
                "resize_keyboard" : true
            })}
            );
        }else{
            ExpensesBot.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            {"reply_markup": JSON.stringify({
                "keyboard": [
                    [{ text: "–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–º–º—É"}],
                    [{ text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é"}]
                ],
                "one_time_keyboard" : true,
                "resize_keyboard" : true
            })}
            );
        }

        // ExpensesBot.telegram.sendMessage(ctx.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ',
        // // {
        // //     reply_markup: JSON.stringify({
        // //     remove_keyboard: true
        // //     })
        // // }
        // {"reply_markup": JSON.stringify({
        //     "keyboard": [
        //         [{ text: "–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å—É–º–º—É"}],
        //         [{ text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é"}]
        //     ],
        //     "one_time_keyboard" : true
        // })}
        // );
    }
});

ExpensesBot.help(async (ctx) => {  
    console.log('bot start pressed by: '+ctx.from.username)
    let user = await BotUser.findOne({ chat_id: ctx.chat.id });
   
    if(user.step === 0 ||user.step === 1 || user.step === 2){
        ExpensesBot.telegram.sendMessage(ctx.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–æ–ø—Ä–æ—Å üëÜ');
    }else{
        ExpensesBot.telegram.sendMessage(ctx.chat.id, '–ù–∞–∂–º–∏—Ç–µ /start –∏ –≤–∞–º –≤—ã–π–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.')
    }
});

ExpensesBot.launch()


module.exports = {
    ExpensesBot
};